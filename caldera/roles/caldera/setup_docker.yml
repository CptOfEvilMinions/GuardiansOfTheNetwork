####################################################################
#  Setup Timedatectl
####################################################################
- name: Set time to {{ timezone }}
  shell: timedatectl set-ntp on && timedatectl set-timezone {{ timezone }}

####################################################################
# Set hostname
####################################################################
- name: add hostname to /etc/hosts
  lineinfile:
   dest: /etc/hosts
   regexp: '^127\.0\.0\.1[ \t]+localhost'
   line: '127.0.0.1 localhost {{ caldera_hostname }} {{ caldera_hostname }}.{{ base_domain }}'
   state: present
- hostname:
   name: "{{ caldera_hostname }}.{{ base_domain }}"

####################################################################
# Apt update
####################################################################
- name: Run the equivalent of "apt-get update" as a separate step
  apt:
    update_cache: yes

####################################################################
# Install/Setup Docker
####################################################################
- name: Install Docker required software
  package:
    name: '{{ item }}'
    state: latest
  with_items:
    - apt-transport-https 
    - ca-certificates 
    - curl 
    - software-properties-common
    - python3-pip

- name: Add Docker GPG key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: Add Docker repo
  apt_repository:
    repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial xerus stable
    state: present

- name: Run the equivalent of "apt-get update" as a separate step
  apt:
    update_cache: yes

- name: Install Docker
  package:
    name: '{{ item }}'
    state: latest
  with_items:
    - docker-ce

- name: Install Docker-py 
  pip:
    name: docker-py
    executable: pip3

- name: Start Docker service
  service:
    name: docker
    state: started
    enabled: yes

- name: Add Docker group to ubuntu user
  user:
    name: ubuntu
    group: docker

####################################################################
# Slack notification
####################################################################
- name: Send slack notification when done
  slack:
    token: "{{ slack_token }}"
    msg: '{{ ansible_nodename }}:{{ ansible_default_ipv4.address }} - Install/Setup Docker - {{ ansible_nodename }}'
    channel: "{{ slack_channel }}"
  when: slack_token != None